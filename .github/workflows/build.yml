name: Build App
on:
  pull_request:
    branches: 
      - main
    types: [closed]

  workflow_dispatch:
    inputs:
      os:
        type: choice
        description: OS to build on. Ubuntu is faster, MacOS supports iOS builds, Windows is unsupported
        options:
          - macos-latest
          - ubuntu-latest
      platform:
        type: choice
        description: Platform to build for
        options:
          - android
          - ios
      profile:
        type: choice
        description: Build profile to use
        options:
          - development
          - preview
          - production
          
jobs:
  requirement:
    if: ${{ (github.event.pull_request.merged && github.event.pull_request.user.login == 'github-actions[bot]') || github.event_name == 'workflow_dispatch' }}
    runs-on: 'ubuntu-latest'
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
        
  release:
    runs-on: 'ubuntu-latest'
    needs: requirement
    outputs:
      upload_url: ${{ steps.releaseplease.outputs.upload_url }}
    steps:
      - name: üèó Setup repo
        uses: actions/checkout@v2
      - name: üéâ Create release info
        uses: google-github-actions/release-please-action@v3
        id: releaseplease
        with:
          release-type: expo
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump steps context
        env:
          GITHUB_CONTEXT: ${{ toJSON(steps) }}
        run: echo "$GITHUB_CONTEXT"
          
  packageinfo:
    runs-on: 'ubuntu-latest'
    needs: requirement
    outputs:
      name: ${{ steps.package.outputs.name }}
      version: ${{ steps.package.outputs.version }}
    steps:
      - name: üèó Setup repo
        uses: actions/checkout@v2
      - name: üì¶ Get package info
        id: package
        uses: codex-team/action-nodejs-package-info@v1.1
        with:
          path: ${{ github.workspace }}
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump steps context
        env:
          GITHUB_CONTEXT: ${{ toJSON(steps) }}
        run: echo "$GITHUB_CONTEXT"
          
  build:
    runs-on: ${{ github.event.inputs.os || 'ubuntu-latest' }}
    needs: [requirement, release, packageinfo]
    strategy:
      matrix:
        node: [16.x]
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump needs
        env:
          GITHUB_CONTEXT: ${{ toJSON(needs) }}
        run: echo "$GITHUB_CONTEXT"
        
      - name: üèó Setup repo
        uses: actions/checkout@v2

      - name: üèó Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          cache: yarn

      - name: üèó Setup Expo and EAS
        uses: expo/expo-github-action@v7
        with:
          token: ${{ secrets.EXPO_TOKEN }}
          expo-version: latest
          eas-version: latest

      - name: üèó Setup EAS local builds
        run: yarn global add eas-cli-local-build-plugin

      - name: üì¶ Install dependencies
        run: yarn

      - name: üë∑ Build app
        run: |
          eas build --local \
            --non-interactive \
            --output=./app-build \
            --platform=${{ github.event.inputs.platform || 'android' }} \
            --profile=${{ github.event.inputs.profile || 'preview' }}

      - name: üëç Attach build artifact to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: '${{ needs.release.outputs.upload_url }}'
          asset_path: './app-build'
          asset_name: '${{ needs.packageinfo.outputs.name }}-${{ needs.packageinfo.outputs.version }}.apk'
          asset_content_type: application/octet-stream
          
      - name: üì± Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: app-${{ github.event.inputs.platform || 'android' }}
          path: app-build
